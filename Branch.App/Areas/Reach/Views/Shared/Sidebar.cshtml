@using Branch.App.Areas.Reach.Models.Enums
@using Branch.App.Helpers.Razor
@using Branch.Core.Game.HaloReach.Enums
@using Branch.Extenders
@model Branch.App.Areas.Reach.Models.Base
@{
	var currentPage = ViewBag.CurrentReachPage ?? CurrentPage.ServiceRecord;
	VariantClass? currentHistoryMode = ViewBag.CurrentHistoryMode;
}
<div class="bs-sidebar" data-spy="affix" data-offset-top="358">
	<ul class="nav bs-sidenav">
		<li class="active">
			<a href="@Url.Action("Index", "ServiceRecord", new RouteValueDictionary { { "gamertag", Model.PublicGamertag } })">
				<span class="glyphicon glyphicon-tree-deciduous"></span> Branch
			</a>

			<ul class="nav">
				<li class="@BranchHelpers.CompareEnum(currentPage, CurrentPage.ServiceRecord, "active")">
					@Html.ActionLink("Service Record", "Index", "ServiceRecord", new RouteValueDictionary { { "gamertag", Model.PublicGamertag } }, new Dictionary<string, object>())
				</li>
				
				<li class="@BranchHelpers.CompareEnum(currentPage, CurrentPage.GameHistory, "active")">
					@Html.RouteLink("Game History", "Reach_History", new { slug = "WarGames", gamertag = Model.PublicGamertag })

					@if (currentPage == CurrentPage.GameHistory)
					{
						<ul class="nav">
							@foreach (var variantClass in ((VariantClass[])Enum.GetValues(typeof(VariantClass))).Where(gameMode => gameMode != VariantClass.Unknown))
							{
								<li class="@BranchHelpers.CompareEnum(currentHistoryMode, variantClass, "active")">
									@Html.RouteLink(variantClass.ToString().MakeCamelCaseFriendly(), "Reach_History", new { slug = variantClass.ToString(), gamertag = Model.PublicGamertag })
								</li>
							}
						</ul>
					}
				</li>
			</ul>
		</li>
	</ul>
</div>

