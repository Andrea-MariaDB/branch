@using Branch.App.Areas.Reach.Models
@using Branch.App.Helpers.Razor
@using Branch.App.Helpers.Razor.Reach
@using Branch.Core.Game.HaloReach.Enums
@model GameViewModel
@{
	var game = Model.Game.GameDetails;
	var topPlayer = game.Players.OrderBy(t => t.Standing).First();
}

<div class="cover" style="background-image: url('@AssetUrlHelpers.GetMapImageUrl(game.BaseMapName)')">
	<div class="mask">
		<div class="inner">
			<div class="title">
				<h2>@game.MapName</h2>
				<p>
					@BranchHelpers.MakeDateTimeFriendly(game.GameTimestamp, "d") | @game.GameDuration
				</p>
			</div>

			<div class="game-icon" style="background-image: url('@AssetUrlHelpers.GetDifficultyImageUrl(game.CampaignDifficulty, AssetSize.Large)')"></div>

			<div class="map">
				on
				<br />
				<span class="focus">@game.CampaignDifficulty</span>
			</div>

			<div class="seperator"></div>

			<div class="victor">
				<div class="ffa-victor">
					@if (topPlayer.IsGuest)
					{
						<strong>@topPlayer.PlayerDetail.Gamertag</strong>
					}
					else
					{
						@Html.ActionLink(topPlayer.PlayerDetail.Gamertag, "Index", "ServiceRecord", new RouteValueDictionary { { "gamertag", topPlayer.PlayerDetail.Gamertag } }, new { @class = "alt" })
					}
					led the game with @topPlayer.Kills @(topPlayer.Kills == 1 ? "kill" : "kills"),
					and a K/D of @MathHelpers.CalculateKd(topPlayer.Kills, topPlayer.Deaths)
				</div>
			</div>
		</div>
	</div>
	<div class="victor-player-model hidden-xs" style="background-image: url('@AssetUrlHelpers.GetPlayerModelUrl(topPlayer.PlayerDetail.Gamertag, AssetSize.Medium)')"></div>
</div>
