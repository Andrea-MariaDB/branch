@using Branch.App.Areas.Halo4.Models
@using Branch.App.Helpers.Razor
@using Branch.App.Helpers.Razor.Halo4
@model GameViewModel
@{
	var game = Model.ElapsedGame.Game;
	var difficulty = MetadataHelpers.GetDifficultyInfo(game.Difficulty ?? 0);
	var topPlayer = game.Players.OrderBy(t => t.Standing).First();
}

<div class="cover" style="background-image: url('@GeneralHelpers.GetRawAssetUrl(game.MapImageUrl, "large")')">
	<div class="mask">
		<div class="inner">
			<div class="title">
				<h2>@game.MapName</h2>
				<p>
					@BranchHelpers.MakeDateTimeFriendly(game.EndDateUtc, "d") | @game.Duration
				</p>
			</div>

			<div class="game-icon" style="background-image: url('@GeneralHelpers.GetRawAssetUrl(difficulty.ImageUrl, "large")')"></div>

			<div class="map">
				on
				<br />
				<span class="focus">@difficulty.Name</span>
			</div>

			<div class="seperator"></div>

			<div class="victor">
				<div class="ffa-victor">
					@if (topPlayer.IsGuest)
					{
						<strong>@BranchHelpers.CheckGamertagPrivacy(topPlayer.Gamertag)</strong>
					}
					else
					{
						@Html.ActionLink(BranchHelpers.CheckGamertagPrivacy(topPlayer.Gamertag), "Index", "ServiceRecord", new RouteValueDictionary { { "gamertag", BranchHelpers.CheckGamertagPrivacy(topPlayer.Gamertag) } }, new { @class = "alt" })
					}
					led the game with @topPlayer.Kills @(topPlayer.Kills == 1 ? "kill" : "kills"),
					and a K/D of @MathHelpers.CalculateKd(topPlayer.Kills, topPlayer.Deaths, 2)
				</div>
			</div>
		</div>
	</div>
	<div class="victor-player-model hidden-xs" style="background-image: url('@GeneralHelpers.GetPlayerModelUrl(topPlayer.Gamertag, "medium")')"></div>
</div>
