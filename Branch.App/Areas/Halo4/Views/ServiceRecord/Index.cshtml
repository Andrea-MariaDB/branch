@using System.Globalization
@using Branch.App.Areas.Halo4.Models
@using Branch.App.Helpers.Razor
@using Branch.App.Helpers.Razor.Halo4
@using Branch.Models.Services.Branch
@model ServiceRecordViewModel
@{
	ViewBag.Title = string.Format("{0}'s Halo 4 Service Record", Model.PublicGamertag);
	Layout = "~/Areas/Halo4/Views/Shared/_Layout.cshtml";
	ViewBag.Template = "halo4_service_record";
	ViewBag.CurrentH4Page = Enums.Pages.ServiceRecord;
	var serviceRecord = @Model.ServiceRecord;
	var gameHistory = @Model.RecentWarGamesHistory;
}

<div class="bs-branch-section overview">
	
	@Html.Partial("FlashMessage", false)

	<div class="page-header">
		<h1>Overview</h1>
	</div>
	<div class="row">
		<div class="col-md-6 game-history-split">
			<div class="wrapper">
				<div class="area">
					<canvas id="game-history-split-chart" width="300" height="300"></canvas>
				</div>
				<div class="area-legend">
					@{
						var totalGames = @serviceRecord.GameModes[0].TotalGamesStarted +
						                 @serviceRecord.GameModes[1].TotalGamesStarted +
						                 @serviceRecord.GameModes[2].TotalGamesStarted +
						                 @serviceRecord.GameModes[3].TotalGamesStarted;
					}

					<ul>
						<li>
							<div class="identifier war-games"></div>
							War Games - @BranchHelpers.NumberWithDelimiter(@serviceRecord.GameModes[2].TotalGamesStarted)
							(@BranchHelpers.CalculatePercentage(serviceRecord.GameModes[2].TotalGamesStarted, totalGames, 0)%)
						</li>
						<li>
							<div class="identifier campaign"></div>
							Campaign - @BranchHelpers.NumberWithDelimiter(@serviceRecord.GameModes[0].TotalGamesStarted)
							(@BranchHelpers.CalculatePercentage(serviceRecord.GameModes[0].TotalGamesStarted, totalGames, 0)%)
						</li>
					</ul>
					<br />
					<ul>
						<li>
							<div class="identifier customs"></div>
							Custom Games - @BranchHelpers.NumberWithDelimiter(@serviceRecord.GameModes[3].TotalGamesStarted)
							(@BranchHelpers.CalculatePercentage(serviceRecord.GameModes[3].TotalGamesStarted, totalGames, 0)%)
						</li>
						<li>
							<div class="identifier spartan-ops"></div>
							Spartan Ops - @BranchHelpers.NumberWithDelimiter(@serviceRecord.GameModes[1].TotalGamesStarted)
							(@BranchHelpers.CalculatePercentage(serviceRecord.GameModes[1].TotalGamesStarted, totalGames, 0)%)
						</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="col-md-1"></div>
		<div class="col-md-5">
			<ul class="list-group">
				<li class="list-group-item">
					<span class="badge">@serviceRecord.TotalLoadoutItemsPurchased%</span>
					Loadout Purchase Completion
				</li>
				<li class="list-group-item">
					<span class="badge">@serviceRecord.TotalChallengesCompleted</span>
					Challenges Completed
				</li>
				<li class="list-group-item">
					@{
						var spartanPoints = serviceRecord.SpartanPoints.ToString(CultureInfo.InvariantCulture);
						if (spartanPoints == "52") { spartanPoints += " ;)"; }
					}
					<span class="badge">@spartanPoints</span>
					Spartan Points
				</li>
				<li class="list-group-item">
					@{
						var kills = @serviceRecord.GameModes[2].TotalKills;
						var kdRatio = @serviceRecord.GameModes[2].KdRatio;
					}
					
					<span class="badge">@BranchHelpers.NumberWithDelimiter(kills) (@kdRatio K/D)</span>
					War Games Kills
				</li>
				<li class="list-group-item">
					<span class="badge">@BranchHelpers.NumberWithDelimiter(serviceRecord.GameModes[2].TotalMedals ?? 0)</span>
					War Games Medals
				</li>
				<li class="list-group-item">
					<span class="badge">@BranchHelpers.NumberWithDelimiter(serviceRecord.GameModes[0].TotalKills)</span>
					Covenant/Promethean Kills
				</li>
				<li class="list-group-item">
					<span class="badge">@BranchHelpers.NumberWithDelimiter(serviceRecord.TotalGamesStarted)</span>
					Games Started
				</li>
			</ul>
		</div>
	</div>
</div>
@{
	if (gameHistory != null)
	{
	<div class="bs-branch-section game-history">
		<div class="page-header">
			<h1>Game History</h1>
		</div>
		
		<div class="row">
			@foreach (var game in gameHistory.Games)
			{
				var result = GeneralHelpers.GetGameVictoryStatus(game.Result, game.Completed);
				
				<div id="history-entry-@game.Id" class="col-lg-6 col-sm-12 game-history-entry">
					<a href="@Url.RouteUrl("Halo4_Game", new { id = game.Id })">
						<div class="game-history-container" style="background-image: url('@GeneralHelpers.GetRawAssetUrl(game.MapImageUrl)')">
							<div class="mask @result.Item1"></div>
							<div class="gametype-icon" style="background-image: url('@GeneralHelpers.GetRawAssetUrl(game.BaseVariantImageUrl)')"></div>
							<div class="inner">
								<span class="gametype">@game.VariantName</span>
								<br class="visible-lg visible-xs" />
								<span class="selector">on</span>
								<span class="map-name">@game.MapVariantName</span>

								<div class="stats">
									<span class="type">@game.FeaturedStatName</span>
									<span class="stat">@game.FeaturedStatValue</span>
								</div>

								<div class="windicator hidden-xs">@result.Item2</div>
							</div>
						</div>
					</a>
				</div>
			}
			
			@if (!gameHistory.Games.Any())
			{
				<h4>
					@(Model.PublicGamertag) has not played any games of War Games.
				</h4>
			}
		</div>
	</div>
	}
}

@section scripts
{
	<script src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/0.2.0/Chart.min.js"></script>
	<script>
		var ctx = document.getElementById('game-history-split-chart').getContext('2d');
		var chart = new Chart(ctx).Doughnut([
			{
				value: @(serviceRecord.GameModes[0].TotalGamesStarted),
				color: '#F7464A'
			},
			{
				value: @(serviceRecord.GameModes[2].TotalGamesStarted),
				color: '#5880A0'
			},
			{
				value: @(serviceRecord.GameModes[3].TotalGamesStarted),
				color: '#3d3d7c'
			},
			{
				value: @(serviceRecord.GameModes[1].TotalGamesStarted),
				color: '#949FB1'
			}],
			{
				animationStages : 500,
				animateScale : false,
				animateRotate : false
			}
		);
	</script>
}
