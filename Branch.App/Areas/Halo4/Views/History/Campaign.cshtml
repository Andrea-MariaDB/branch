@using Branch.App.Areas.Halo4.Models
@using Branch.Core.Game.Halo4.Models._343.DataModels
@using Branch.App.Helpers.Razor
@using Branch.App.Helpers.Razor.Halo4
@using Enums = Branch.App.Areas.Halo4.Models.Enums
@model HistoryViewModel<GameHistoryModel.Campaign>
@{
	ViewBag.Title = string.Format("{0}'s Halo 4 Campaign History", Model.PublicGamertag);
	Layout = "~/Areas/Halo4/Views/Shared/_Layout.cshtml";
	ViewBag.Template = "halo4_game_history";
	ViewBag.CurrentH4Page = Enums.Pages.GameHistory;
	ViewBag.CurrentHistoryMode = Model.GameMode;
	
	var gameHistory = Model.GameHistory;
}

<div class="overview">
	
	@Html.Partial("FlashMessage", false)

	<div class="page-header">
		<h1>Campaign History</h1>
	</div>
		
	@if (Model.GameHistory.Games.Any())
	{
		<table class="table game-history">
			<thead>
				<tr>
					<th>Mission</th>
					<th>Standing</th>
					<th>Difficulty</th>
					<th>Type</th>
					<th>Date</th>
					<th>Game Length</th>
				</tr>
			</thead>

			<tbody>
				@foreach (var game in gameHistory.Games)
				{
					<tr class="">
						<td>
							@Html.RouteLink(game.MapName, "Halo4_Game",
								new { gamertag = Model.PublicGamertag, id = game.Id })
						</td>

						<td>
							@GeneralHelpers.GetGameVictoryStatus(game.Result, game.Completed).Item2
						</td>
						<td>
							@MetadataHelpers.GetDifficultyInfo(game.Difficulty).Name
						</td>
						<td>
							@(game.SinglePlayer ? "Single Player" : "Co Op")
						</td>
						<td>
							@BranchHelpers.MakeDateTimeFriendly(game.EndDateUtc, "d")
						</td>
						<td>
							@game.Duration.ToString()
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
	else
	{
		<h6>
			There are no more Campaign Games in <strong>@Model.PublicGamertag's</strong> Game History
		</h6>
	}

	<ul class="pager">
		<li class="previous @(Model.Page == 0 ? "disabled" : "")">
			@Html.RouteLink("← Newer", "Halo4_History", new { page = Model.Page - 1 })
		</li>
		<li class="next @(Model.GameHistory.Games.Any() ? "" : "disabled")">
			@Html.RouteLink("Older →", "Halo4_History", new { page = Model.Page + 1 })
		</li>
	</ul>
</div>
