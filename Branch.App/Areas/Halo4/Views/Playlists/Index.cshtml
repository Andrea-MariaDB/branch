@using Branch.App.Helpers.Razor
@using Branch.App.Helpers.Razor.Halo4
@using Branch.Extenders
@using Branch.Models.Services.Halo4._343.DataModels
@model Branch.App.Areas.Halo4.Models.PlaylistsViewModel

@{
	ViewBag.Title = "Halo 4 Active Playlists";
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Template = "halo4 halo4_playlists";
}

<div class="bs-header welcome-header" id="content">
	<div class="container">
		<h1>Halo 4 Playlists</h1>
		<p>Showing currently active playlists for the <strong>@Model.SelectedMode.GetDescription()</strong> Hopper</p>
	</div>
</div>

<div class="container">
	<div class="row">
		<div class="col-md-9">
			@Html.Partial("FlashMessage", false)

			@foreach (var playlist in Model.Playlists.Playlists.Where(p => p.Mode == Model.SelectedMode && p.IsCurrent))
			{
				<div class="col-md-12 playlist-entry">
					<div class="col-md-12 meta" style="background: url(@(GeneralHelpers.GetRawAssetUrl(playlist.ImageUrl, "large"))) no-repeat center center fixed; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover;">
						<div class="mask"></div>
						<div class="content">
							<strong>
								@playlist.Name
							</strong>
							<p>
								@playlist.Description
							</p>

							<div class="players">
								<div class="count">@BranchHelpers.NumberWithDelimiter(playlist.PopulationCount) players</div>
							</div>
						</div>
					</div>
					<div class="extra-shit-is-in-tabs hahhaha-tabs-fuck-assembly">
						<ul class="nav nav-tabs">
							<li class="active">
								<a href="#meta-@(playlist.Id)" data-toggle="tab">Details</a>
							</li>
							@if (playlist.GameVariants.Any())
							{
								<li>
									<a href="#gvar-@(playlist.Id)" data-toggle="tab">Game Types</a>
								</li>
							}
							@if (playlist.MapVariants.Any())
							{
								<li>
									<a href="#mvar-@(playlist.Id)" data-toggle="tab">Map Variants</a>
								</li>
							}
						</ul>

						<div class="tab-content" id="playlist-info-tab">
							<div class="tab-pane fade in active" id="meta-@(playlist.Id)">
								<ul class="no-style">
									@if (playlist.Mode == Enums.GameMode.WarGames)
									{
										<li>
											<strong>
												<abbr title="How CSR is calculated for the playlist">Orientation</abbr>:
											</strong>
											@GeneralHelpers.GetPlaylistCsrOrientation(playlist).ToString()
										</li>
									}
									<li>
										<strong>
											Player Grouping:
										</strong>
										@(playlist.IsFreeForAll ? "Free for All" : "Team vs Team")
									</li>
									<li>
										<strong>
											Max Local Players:
										</strong>
										@playlist.MaxLocalPlayers
									</li>
									<li>
										<strong>
											Max Party Size:
										</strong>
										@playlist.MaxPartySize
									</li>
								</ul>
							</div>
							
							@if (playlist.GameVariants.Any())
							{
								<div class="gvar tab-pane fade in" id="gvar-@(playlist.Id)">
									<table class="table">
										<thead>
											<tr>
												<th>*</th>
												<th>Game Variant Name</th>
												<th>Game Variant Description</th>
												<th>Variant Based off of</th>
											</tr>
										</thead>
										<tbody>
											@foreach (var gameVariant in playlist.GameVariants)
											{
												<tr class="entry">
													<td>
														<div class="icon-frame" style="background-image: url(@GeneralHelpers.GetRawAssetUrl(gameVariant.GameBaseVariantImageUrl));"></div>
													</td>
													<td>@gameVariant.GameVariantName</td>
													<td>@gameVariant.GameVariantDescription</td>
													<td>@gameVariant.GameBaseVariantName
												</tr>
											}
										</tbody>
									</table>
								</div>
							}

							@if (playlist.GameVariants.Any())
							{
								<div class="mvar tab-pane fade in" id="mvar-@(playlist.Id)">
									<table class="table">
										<thead>
											<tr>
												<th>*</th>
												<th>Game Variant Name</th>
												<th>Game Variant Description</th>
											</tr>
										</thead>
										<tbody>
											@foreach (var map in playlist.MapVariants.Select(mapVariant => MetadataHelpers.GetMapInfo(mapVariant.MapId)))
											{
												<tr class="entry">
													<td>
														<div class="preview-frame" style="background-image: url(@GeneralHelpers.GetRawAssetUrl(map.ImageUrl));"></div>
													</td>
													<td class="name">@map.Name</td>
													<td>@map.Description</td>
												</tr>
											}
										</tbody>
									</table>
								</div>
							}
						</div>
					</div>
				</div>
				<hr />
			}
		</div>
		<div class="col-md-3">
			<div class="bs-sidebar" data-spy="affix" data-offset-top="205">
				<ul class="nav bs-sidenav">
					@foreach (var playlistMode in (Enums.GameMode[])Enum.GetValues(typeof(Enums.GameMode)))
					{
						var isActive = (playlistMode == Model.SelectedMode);
						if (Model.Playlists.Playlists.All(p => p.Mode != playlistMode))
						{
							continue;
						}

						<li class="@(isActive ? "active" : "")">
							@Html.ActionLink(playlistMode.GetDescription(), "Index", "Playlists", new { area = "Halo4", slug = playlistMode.ToString().ToLowerInvariant() }, null)
						</li>
					}
				</ul>
			</div>
		</div>
	</div>
</div>