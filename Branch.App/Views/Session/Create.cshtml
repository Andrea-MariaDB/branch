@using Branch.App.Areas.Identity.Models
@model CreateSessionViewModel
@{
	ViewBag.Title = "Sign In";
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Template = "identity";
}

@Html.Partial("~/Areas/Identity/Views/Shared/IdentityHeader.cshtml", new HeaderMetadata("Sign In to Branch", "Make a more personalized branch."))

<div class="container">
	@using (Html.BeginForm("Create", "Session", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<div class="container heads-up">
			<div class="row col-md-10 col-md-offset-1">
				<div class="col-md-12 panel panel-default">
					<div class="panel-body details">
						@if (ViewContext.ViewData.ModelState.Any(x => x.Key == ""))
						{
							<section class="bs-callout bs-callout-danger">
								<h4>Validation Errors</h4>
								@Html.ValidationSummary(true)
							</section>
						}

						<section class="input-section row">
							<div class="col-md-6">
								<span class="title">Username/Email</span>
								<p>
									<span class="tier">
										Required
									</span>
									The username or email you used to sign up with.
								</p>
								<div class="input-group">
									<span class="input-group-addon">@@</span>
									@Html.TextBoxFor(v => v.Username, new { @class = "form-control" })
								</div>
							</div>
							<div class="col-md-6">
								@if (ViewContext.ViewData.ModelState.Any(x => x.Key == "Username"))
								{
									if (ViewContext.ViewData.ModelState.First(x => x.Key == "Username").Value.Errors.Any())
									{
										<div class="bs-callout bs-callout-danger" style="">
											<h4>Invalid Username/Email</h4>
											<p class="reason">
												@Html.ValidationMessageFor(v => v.Username)
											</p>
										</div>
									}
								}
							</div>
						</section>

						<section class="input-section row">
							<div class="col-md-6">
								<span class="title">Password</span>
								<p>
									<span class="tier">
										Required
									</span>
									The secure password you used to sign up
								</p>
								<div class="input-group">
									<span class="input-group-addon">*</span>
									@Html.PasswordFor(v => v.Password, new { @class = "form-control" })
								</div>
							</div>
							<div class="col-md-6">
								@if (ViewContext.ViewData.ModelState.Any(x => x.Key == "Password"))
								{
									if (ViewContext.ViewData.ModelState.First(x => x.Key == "Password").Value.Errors.Any())
									{
										<div class="bs-callout bs-callout-danger" style="">
											<h4>Invalid Password</h4>
											<p class="reason">
												@Html.ValidationMessageFor(v => v.Password)
											</p>
										</div>
									}
								}
							</div>
						</section>

						<section class="input-section row" style="margin-left: 5px; padding-top: 10px;">
							<input type="submit" class="btn btn-primary" value="Sign In" />
							<div style="margin-top: 10px;">
								@Html.CheckBoxFor(v => v.RememberMe, new { style = "margin-right: 10px;" })
								<span class="title">Remember Me</span>
							</div>
						</section>
					</div>
				</div>
			</div>
		</div>
	}
</div>
